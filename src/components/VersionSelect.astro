---
// src/components/VersionSelect.astro

import { VERSIONS } from '../data/versions';

// strip any trailing slash off BASE_URL so we get e.g.
//   ''                in `npm run dev`
//   '/reportifyr_docs' on GH-Pages
const RAW_BASE = import.meta.env.BASE_URL.replace(/\/$/, '');

// grab newest tag/label
const [{ tag: LATEST_TAG, label: LATEST_LABEL }] = VERSIONS;
---

{RAW_BASE !== '' && (
  <>
    <select id="version-select" style="padding:.25rem; border-radius:.25rem">
      <option value={LATEST_TAG}>Latest ({LATEST_LABEL})</option>
      {VERSIONS.slice(1).map(({ tag, label }) => (
        <option value={tag}>{label}</option>
      ))}
    </select>

    <script is:inline>
    {/** inline script gets ballooned into the page *after* the <select> **/}
    (() => {
      const RAW_BASE = "${RAW_BASE}";
      const LATEST   = "${LATEST_TAG}";
      const sel      = document.getElementById('version-select');
      if (!sel) return;

      // pre-select the current version from the URL
      const path   = window.location.pathname;
      const prefix = RAW_BASE + '/versions/';
      sel.value = path.startsWith(prefix)
        ? path.slice(prefix.length).split('/')[0] || LATEST
        : LATEST;

      sel.addEventListener('change', (e) => {
        const version = e.target.value;
        // what comes *after* the base (e.g. '/reportifyr_docs')
        const tail = window.location.pathname.slice(RAW_BASE.length) || '/';
        const target =
          version === LATEST
            ? RAW_BASE + tail
            : RAW_BASE + '/versions/' + version + tail;
        window.location.href = target;
      });
    })();
    </script>
  </>
)}
